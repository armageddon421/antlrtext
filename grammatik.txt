// Alles was mit "//" oder "=" beginnt, ist keine g�ltige Grammatik.

===== Deklarationen =====

=== Integer ===

Alf ist z�hlbar.
Alf und Sebastian sind z�hlbar.
Alf, Sebastian und Aiko sind z�hlbar.

=== Float ===

Alf ist nicht z�hlbar

=== Text bzw. Strings ===

Alf kann sprechen.

=== Funktionen ===

//Siehe Kapitel "Funktionen"

Potter ist ein Buch.

===== Arithmetik =====

=== Summen und Differenzen ===

Alf ist die Summe von Sebastian und Aiko.
Alf ist die Summe von Sebastian, Aiko und Alf.
Alf ist die Differenz von Sebastian und Aiko.

Alf ist die Summe von Sebi, Sebastian, der Differenz zwischen Emil und Siegfried und der Differenz zwischen Aiko und Sandra.

=== Multiplikation ===

Alf ist die Multiplikation von Alf, Aiko und Sandra.

Alf ist die Summe der Multiplikation von Alf und Aiko und der Multiplikation von Sandra und Nicole.

=== Division ===

Alf ist der Quotiont aus Sebastian und Aiko.
Alf ist die Division von Sebastian durch Aiko.

Alf ist die Summe des Quotient aus Sebastian und Aiko 
und der Multiplikation von Sandra und Nicole.

=== Modulo ===

Alf ist der Rest der Divison von Sandra durch Aiko.


===== Verzweigungen =====

//..., wenn Alf gleich 0 ist.
//..., wenn Alf gr��er oder gleich Nicole ist.

//Beispiel

Alf ist der Quotiont aus Sebastian und Aiko, wenn alf gleich 0 ist.

Alf ist der Quotiont aus Sebastian und Aiko, wenn alf gr��er oder gleich 0 ist und alf kleiner oder gleich 10 ist.


===== Schleifen =====

==== For-Schleife ====

=== Schleifenkopf ===

Markus z�hlt bis 5.
Markus z�hlt bis Alf.
Markus z�hlt von 10 bis 20.
Markus z�hlt von Alf bis Aiko.

=== Schleifenende ===

Markus z�hlt weiter.

=== Schleifenabbruch ===

Markus hat keine Lust mehr.


==== While-Schleife ====

=== Schleifenkopf ===

//Durch die Benamung der Schleife kann auch aus einer inneren Schleife heraus, eine �u�ere abgebrochen werden.
//Auch while-schleifen z�hlen einen Z�hler hoch, der �ber den Namen der Schleife ausgelesen werden kann.
//Es gibt keine fu�gesteuerte Schleife.

Markus z�hlt.	//Endlosschleife
Markus z�hlt, bis Alf gleich 0 ist.
Markus z�hlt, bis Alf gleich Nicole ist.
Markus z�hlt, solange Alf gleich 0 ist.
Markus z�hlt, solange Alf gleich Nicole ist.
Markus z�hlt, solagee Alf kleiner als Nicole ist.
Markus z�hlt, solange Alf gr��er oder gleich 0 ist.



===== Funktionen =====

=== Deklaration ===

Potter ist ein Buch.

Potter fragt nach der z�hlbaren Nicole.
Potter fragt nach der z�hlbaren Nicole, der unz�hlbaren Sandra und dem sprechenden Alf.


=== R�ckgabewert ===

Sebastian ist z�hlbar.
//Sebastian ist ...

Potter endet mit dem z�hlbaren Sebastian. //Der Wert von Sebastian wird zur�ckgegeben, der Typ wird erzwungen.

=== Aufruf ===

//Ohne R�ckgabewert
Potter beginnt mit Nicole.
Potter beginnt mit Nicole, Sandra und Alf.

//Mit R�ckgabewert

Potter beginnt mit Nicole und endet mit Sebastian.
//Sebastian hat jetzt den Typ, mit dem die Funktion definiert wurde. Wenn er schon existiert, muss er einen kompatiblen Typ haben.

===== Ein- und Ausgabe =====

=== Eingabe ===

Der Erz�hler fragt nach Sebastian. 	//Sebastian muss schon deklariert sein.

=== Ausgabe ===

Der Erz�hler sagt "Hallo.".
Der Erz�hler redet von Alf. 	//Der Wert von Alf wird ausgegeben.
Der Erz�hler bl�ttert um.		//Newline?
Der Erz�hler macht eine Pause.	//Zwei Newlines?







